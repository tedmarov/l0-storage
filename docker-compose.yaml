version: '3'

services:
  # Auth service
  auth:
    build:
      context: docker/auth
    ports:
      - 8000:80
    environment:
      SERVER_LOG_LEVEL: info
    
  # REST API service
  api:
    build:
      context: .
      dockerfile: dev.dockerfile
      target: development
      args:
        - JAR_FILE=target/*.jar
    environment: [] 
    ports:
      - 10507:10507
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy


  # Postgres database
  db:
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - "./database:/docker-entrypoint-initdb.d"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # S3-compat object storage
  storage:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ted
      MINIO_ROOT_PASSWORD: Tiki#Wiki#23
    ports: 
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-storage:/data
    command: server --console-address ":9001" /data

  # CloudFlare worker (handle file uploads at the edge)
  worker-upload:
    image: cloudflare/cloudflare
    build:
      context: worker/upload
      args: []
    working_dir: /app
    environment:
      L0_STORAGE_ENDPOINT: api:10507/api/latest/upload
      REMOTE_ID: ID-FOR-LOCAL-CLOUDFLARE-WORKER-CONTAINER
      REMOTE_SECRET: SECRET-FOR-LOCAL-CLOUDFLARE-WORKER-CONTAINER
      WASABI_ENDPOINT: storage-container-PLACEHOLDER
      WASABI_ID: ADD-THIS-FOR-MINIO
      WASABI_SECRET: ADD-THIS-TOO
    volumes:
      - './:/home/wrangler'
    ports:
      - 10507:10507

volumes:
  db-data:
  minio-storage: